{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "nullc",
	"fileTypes": [
		".nc",
		".nullc"
	],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#characters"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#derived_types"
		},
		{
			"include": "#base_types"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#numbers"
		}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.block",
				"begin": "\\/\\*",
				"end": "\\*\\/"
			},
			{
				"name": "comment.line",
				"match": "\\/\\/.*$"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.nullc",
				"match": "\\b(if|else|while|for|switch|case|default|do|return|yield|break|continue)\\b"
			},
			{
				"name": "keyword.operator.new.nullc",
				"match": "\\b(new)\\b"
			},
			{
				"name": "keyword.operator.nullc",
				"match": "\\b(in)\\b"
			},
			{
				"name": "keyword.other",
				"match": "\\b(class|enum|namespace|coroutine|operator|this|import)\\b"
			},
			{
				"name": "constant.language",
				"match": "\\b(true|false|nullptr)\\b"
			}]
		},
		"characters": {
			"name": "string.quoted.single.nullc",
			"begin": "\\'",
			"end": "\\'",
			"patterns": [
				{
					"name": "constant.character.escape.nullc",
					"match": "\\\\."
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.nullc",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.nullc",
					"match": "\\\\."
				}
			]
		},
		"derived_types": {
			"patterns": [{
				"name": "meta.type.nullc",
				"match": "(?<name>(?<id>\\b[a-zA-Z_][a-zA-Z_0-9]*\\b)?(?:\\s+ref\\s*?\\(\\s*?(?:(?:\\g<name>|\\g<id>)\\s*?(?:,\\s*?(?:\\g<name>|\\g<id>)\\s*)*)?\\s*\\)|\\s+ref|\\s*?\\[[^\\]]*\\])+)\\s+\\g<id>",
				"captures": {
					"1": { "name": "entity.name.type.nullc" }
				 }
			}]
		},
		"base_types": {
			"patterns": [{
				"name": "entity.name.type.nullc",
				"match": "\\b(void|bool|char|short|int|long|float|double|typeid|__function|__nullptr|generic|auto)\\b"
			}]
		},
		"identifiers": {
			"patterns": [{
				"name": "variable.nullc",
				"match": "\\b[a-zA-Z_][a-zA-Z_0-9]*\\b"
			}]
		},
		"numbers": {
			"patterns": [{
				"name": "constant.numeric.nullc",
				"match": "0x[0-9a-fA-F]+|[0-9]+\\.[0-9]*f?|[0-9]+l?"
			}]
		}
	},
	"scopeName": "source.nullc"
}